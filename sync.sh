#!/bin/bash

# Script de synchronisation automatique pour Grind Live
# Synchronise le code avec GitHub et exporte le sch√©ma Supabase

echo "üîÑ D√©but de la synchronisation..."

# Couleurs pour les messages
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# Fonction pour afficher les messages color√©s
print_status() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# 1. V√©rifier si on est dans un repo git
if [ ! -d ".git" ]; then
    print_error "Ce dossier n'est pas un repository Git !"
    exit 1
fi

# 2. V√©rifier s'il y a des changements
if [ -z "$(git status --porcelain)" ]; then
    print_warning "Aucun changement d√©tect√©. Synchronisation termin√©e."
    exit 0
fi

# 3. Ajouter tous les fichiers
print_status "Ajout des fichiers..."
git add .

# 4. Cr√©er le message de commit
COMMIT_MESSAGE="${1:-'Sauvegarde automatique - $(date "+%Y-%m-%d %H:%M:%S")'}"

# 5. Committer les changements
print_status "Cr√©ation du commit..."
if git commit -m "$COMMIT_MESSAGE"; then
    print_status "Commit cr√©√© avec succ√®s"
else
    print_error "Erreur lors de la cr√©ation du commit"
    exit 1
fi

# 6. Pousser sur GitHub
print_status "Pouss√©e vers GitHub..."
if git push; then
    print_status "Code synchronis√© sur GitHub"
else
    print_error "Erreur lors de la pouss√©e vers GitHub"
    exit 1
fi

# 7. Exporter le sch√©ma Supabase (si Supabase CLI est install√©)
if command -v supabase &> /dev/null; then
    print_status "Export du sch√©ma Supabase..."
    if [ -f "supabase/config.toml" ]; then
        # Si on est dans le projet Supabase
        if supabase db diff --schema public > supabase-schema.sql 2>/dev/null; then
            print_status "Sch√©ma Supabase export√©"
            
            # Ajouter et committer le sch√©ma export√©
            git add supabase-schema.sql
            if git commit -m "Mise √† jour du sch√©ma Supabase - $(date "+%Y-%m-%d %H:%M:%S")"; then
                git push
                print_status "Sch√©ma Supabase synchronis√©"
            fi
        else
            print_warning "Impossible d'exporter le sch√©ma Supabase (v√©rifiez la configuration)"
        fi
    else
        print_warning "Fichier supabase/config.toml non trouv√©"
    fi
else
    print_warning "Supabase CLI non install√© - sch√©ma non export√©"
    echo "Pour installer Supabase CLI: npm install -g supabase"
fi

# 8. V√©rifier le statut final
print_status "V√©rification du statut..."
git status --porcelain

echo ""
print_status "üéâ Synchronisation termin√©e avec succ√®s !"
echo ""
echo "üìã R√©sum√©:"
echo "   ‚Ä¢ Code pouss√© sur GitHub"
echo "   ‚Ä¢ Sch√©ma Supabase export√© (si disponible)"
echo "   ‚Ä¢ Commit: $COMMIT_MESSAGE"
echo ""
echo "üåê Pour r√©cup√©rer sur un autre ordinateur:"
echo "   git clone https://github.com/gwendo85/grind-live.git"
echo "   cd grind-live"
echo "   npm install"
echo "   supabase db push  # (si Supabase CLI install√©)" 