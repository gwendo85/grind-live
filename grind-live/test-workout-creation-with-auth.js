// Test de cr√©ation de s√©ance avec authentification
const { createClient } = require('@supabase/supabase-js');

// Configuration Supabase
const supabaseUrl = 'https://yrowyofwnbmpuibbmlba.supabase.co';
const supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inlyb3d5b2Z3bmJtcHVpYmJtbGJhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTE1MDQ0OTcsImV4cCI6MjA2NzA4MDQ5N30.GdQXa2Qn_8_vw5m3euKi_uTDdGmnj7B4sNdurGEJvV8';

const supabase = createClient(supabaseUrl, supabaseAnonKey);

async function testWorkoutCreation() {
  console.log('üß™ Test de cr√©ation de s√©ance');
  console.log('=============================');

  try {
    // Test 1: V√©rifier l'authentification
    console.log('1. V√©rification de l\'authentification...');
    const { data: { user }, error: authError } = await supabase.auth.getUser();
    
    if (authError) {
      console.log('‚ùå Erreur d\'authentification:', authError.message);
      console.log('üí° Note: Ce test n√©cessite une authentification via l\'interface web');
      return;
    }
    
    if (!user) {
      console.log('‚ùå Aucun utilisateur connect√©');
      console.log('üí° Veuillez vous connecter via l\'interface web d\'abord');
      return;
    }
    
    console.log('‚úÖ Utilisateur connect√©:', user.email);

    // Test 2: Cr√©er une s√©ance de test
    console.log('\n2. Cr√©ation d\'une s√©ance de test...');
    const testWorkout = {
      name: 'Test S√©ance ' + new Date().toLocaleTimeString(),
      notes: 'S√©ance de test automatique',
      user_id: user.id,
      status: 'draft',
      is_live: false,
      date: new Date().toISOString().split('T')[0],
    };

    console.log('üìù Donn√©es de s√©ance:', testWorkout);

    const { data: workout, error: workoutError } = await supabase
      .from('workouts')
      .insert(testWorkout)
      .select()
      .single();

    if (workoutError) {
      console.log('‚ùå Erreur lors de la cr√©ation de la s√©ance:', workoutError.message);
      return;
    }

    console.log('‚úÖ S√©ance cr√©√©e avec succ√®s:', workout.id);

    // Test 3: Cr√©er un exercice de test
    console.log('\n3. Cr√©ation d\'un exercice de test...');
    const { data: exercise, error: exerciseError } = await supabase
      .from('exercises')
      .insert({
        name: 'Test Exercice',
        category: 'test',
        user_id: user.id
      })
      .select()
      .single();

    if (exerciseError) {
      console.log('‚ùå Erreur lors de la cr√©ation de l\'exercice:', exerciseError.message);
      return;
    }

    console.log('‚úÖ Exercice cr√©√© avec succ√®s:', exercise.id);

    // Test 4: Cr√©er un log d'exercice
    console.log('\n4. Cr√©ation d\'un log d\'exercice...');
    const testLog = {
      workout_id: workout.id,
      exercise_id: exercise.id,
      sets: 3,
      reps: 10,
      weight: 80,
      rest_time: 90,
      notes: 'Log de test',
    };

    const { data: log, error: logError } = await supabase
      .from('exercise_logs')
      .insert(testLog)
      .select()
      .single();

    if (logError) {
      console.log('‚ùå Erreur lors de la cr√©ation du log:', logError.message);
      return;
    }

    console.log('‚úÖ Log d\'exercice cr√©√© avec succ√®s:', log.id);

    // Test 5: V√©rifier que tout a √©t√© cr√©√©
    console.log('\n5. V√©rification finale...');
    const { data: finalWorkout, error: finalError } = await supabase
      .from('workouts')
      .select(`
        *,
        exercise_logs (
          *,
          exercise (*)
        )
      `)
      .eq('id', workout.id)
      .single();

    if (finalError) {
      console.log('‚ùå Erreur lors de la v√©rification finale:', finalError.message);
      return;
    }

    console.log('‚úÖ V√©rification finale r√©ussie !');
    console.log('üìä S√©ance cr√©√©e:', finalWorkout.name);
    console.log('üìä Nombre d\'exercices:', finalWorkout.exercise_logs.length);

    console.log('\nüéâ Test de cr√©ation de s√©ance r√©ussi !');
    console.log('\nüìã R√©sum√©:');
    console.log('- S√©ance cr√©√©e:', workout.id);
    console.log('- Exercice cr√©√©:', exercise.id);
    console.log('- Log cr√©√©:', log.id);

  } catch (error) {
    console.error('‚ùå Erreur inattendue:', error);
  }
}

testWorkoutCreation(); 